{
  "rules": {
    ".read": "auth != null && auth.uid == 'patchr-cloud-worker'",
    ".write": "auth != null && auth.uid == 'patchr-cloud-worker'",
    "clients": {
      ".validate": "newData.hasChildren(['ios'])",
      "ios": {
        ".validate": "newData.isNumber()"
      },
      "$other": {
        ".validate": "false"
      },
      ".read": "true"
    },
    "counters": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        "unreads": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    "channels": {
      "$channelId": {
        ".validate": "newData.hasChildren(['created_at', 'created_by', 'general', 'name', 'owned_by'])",
        "archived": {
          ".validate": "newData.isBoolean()"
        },
        "created_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "created_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "general": {
          ".validate": "newData.isBoolean()"
        },
        "modified_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "modified_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 50 && newData.val() == newData.val().toLowerCase()"
        },
        "owned_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "photo": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['filename', 'source'])",
          "filename": {
            ".validate": "newData.isString() && newData.val().endsWith('.jpg') && newData.val().length <= 100"
          },
          "height": {
            ".validate": "newData.isNumber()"
          },
          "source": {
            ".validate": "newData.isString() && newData.val() == 'google-storage'"
          },
          "taken_at": {
            ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
          },
          "width": {
            ".validate": "newData.isNumber()"
          },
          "uploading": {
            ".validate": "newData.isBoolean()"
          },
          "location": {
            "$key1": {
              ".validate": "newData.isNumber()"
            },
            ".validate": "newData.hasChildren() && newData.child('lat').val() != null && newData.child('lng').val() != null"
          },
          "$other": {
            ".validate": "false"
          }
        },
        "purpose": {
          ".validate": "newData.isString() && newData.val().length <= 4000"
        },
        "topic": {
          ".validate": "newData.isString() && newData.val().length <= 200"
        },
        "type": {
          ".validate": "newData.isString() && (newData.val() == 'channel' || newData.val() == 'messaging')"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null && auth != null || data.val() != null && newData.val() != null && auth != null && (data.child('created_by').val() == auth.uid || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner')) || data.val() != null && newData.val() == null && auth != null && (data.child('created_by').val() == auth.uid || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner'))",
        ".read": "auth != null"
      },
      ".indexOn": [
        "name"
      ]
    },
    "channel-members": {
      "$channelId": {
        ".read": "auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null",
        "$userId": {
          ".validate": "newData.hasChildren(['created_at', 'created_by', 'muted', 'notifications', 'role'])",
          "archived": {
            ".validate": "newData.isBoolean()"
          },
          "created_at": {
            ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
          },
          "created_by": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "index_priority_joined_at": {
            ".validate": "newData.isNumber()"
          },
          "index_priority_joined_at_desc": {
            ".validate": "newData.isNumber()"
          },
          "invite_id": {
            ".validate": "newData.isString() && newData.val().length == 12"
          },
          "invited_by": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "joined_at": {
            ".validate": "newData.isNumber()"
          },
          "joined_at_desc": {
            ".validate": "newData.isNumber()"
          },
          "muted": {
            ".validate": "newData.isBoolean()"
          },
          "notifications": {
            ".validate": "newData.isString() && (newData.val() == 'all' || newData.val() == 'direct_only' || newData.val() == 'none')"
          },
          "priority": {
            ".validate": "newData.isNumber()"
          },
          "role": {
            ".validate": "newData.isString() && (newData.val() == 'owner' || newData.val() == 'editor' || newData.val() == 'reader')"
          },
          "starred": {
            ".validate": "newData.isBoolean()"
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "data.val() == null && auth != null && root.child('channels').child($channelId).val() != null || data.val() != null && newData.val() != null && auth != null && (data.child('created_by').val() == auth.uid && newData.child('role').val() == data.child('role').val() || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner')) || data.val() != null && newData.val() == null && auth != null && (data.child('created_by').val() == auth.uid || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner'))"
        }
      }
    },
    "channel-messages": {
      "$channelId": {
        ".read": "auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null",
        "$messageId": {
          ".validate": "newData.hasChildren(['channel_id', 'created_at', 'created_at_desc', 'created_by', 'modified_at', 'modified_by'])",
          "attachments": {
            "$key2": {
              ".validate": "$key2.length == 12 && newData.hasChildren() && newData.hasChildren(['photo'])",
              "photo": {
                ".validate": "newData.hasChildren() && newData.hasChildren(['filename', 'source'])",
                "filename": {
                  ".validate": "newData.isString() && newData.val().endsWith('.jpg') && newData.val().length <= 100"
                },
                "height": {
                  ".validate": "newData.isNumber()"
                },
                "source": {
                  ".validate": "newData.isString() && newData.val() == 'google-storage'"
                },
                "taken_at": {
                  ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
                },
                "width": {
                  ".validate": "newData.isNumber()"
                },
                "uploading": {
                  ".validate": "newData.isBoolean()"
                },
                "location": {
                  "$key1": {
                    ".validate": "newData.isNumber()"
                  },
                  ".validate": "newData.hasChildren() && newData.child('lat').val() != null && newData.child('lng').val() != null"
                },
                "$other": {
                  ".validate": "false"
                }
              },
              "$other": {
                ".validate": "false"
              }
            },
            ".validate": "newData.hasChildren()"
          },
          "channel_id": {
            ".validate": "newData.isString() && newData.val().length == 12"
          },
          "comments": {
            "$key3": {
              ".validate": "($key3.length == 28 || $key3.length == 12) && ***TYPE RECURSION***"
            },
            ".validate": "newData.hasChildren()",
            "$commentId": {
              ".validate": "newData.hasChildren(['channel_id', 'created_at', 'created_at_desc', 'created_by', 'modified_at', 'modified_by'])",
              "attachments": {
                "$key2": {
                  ".validate": "$key2.length == 12 && newData.hasChildren() && newData.hasChildren(['photo'])",
                  "photo": {
                    ".validate": "newData.hasChildren() && newData.hasChildren(['filename', 'source'])",
                    "filename": {
                      ".validate": "newData.isString() && newData.val().endsWith('.jpg') && newData.val().length <= 100"
                    },
                    "height": {
                      ".validate": "newData.isNumber()"
                    },
                    "source": {
                      ".validate": "newData.isString() && newData.val() == 'google-storage'"
                    },
                    "taken_at": {
                      ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
                    },
                    "width": {
                      ".validate": "newData.isNumber()"
                    },
                    "uploading": {
                      ".validate": "newData.isBoolean()"
                    },
                    "location": {
                      "$key1": {
                        ".validate": "newData.isNumber()"
                      },
                      ".validate": "newData.hasChildren() && newData.child('lat').val() != null && newData.child('lng').val() != null"
                    },
                    "$other": {
                      ".validate": "false"
                    }
                  },
                  "$other": {
                    ".validate": "false"
                  }
                },
                ".validate": "newData.hasChildren()"
              },
              "channel_id": {
                ".validate": "newData.isString() && newData.val().length == 12"
              },
              "comments": {
                "$key3": {
                  ".validate": "($key3.length == 28 || $key3.length == 12) && ***TYPE RECURSION***"
                },
                ".validate": "newData.hasChildren()"
              },
              "created_at": {
                ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
              },
              "created_at_desc": {
                ".validate": "newData.isNumber() && newData.val() >= -(now + 3600000)"
              },
              "created_by": {
                ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
              },
              "message_id": {
                ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
              },
              "modified_at": {
                ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
              },
              "modified_by": {
                ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
              },
              "reactions": {
                "$key4": {
                  ".validate": "($key4 == ':thumbsup:' || $key4 == ':thumbsdown:' || $key4 == ':grinning:' || $key4 == ':tada:' || $key4 == ':clap:' || $key4 == ':100:' || $key4 == ':poop:' || $key4 == ':confused:' || $key4 == ':heart:' || $key4 == ':smiley_cat:' || $key4 == ':smiling_imp:' || $key4 == ':muscle:' || $key4 == ':zzz:' || $key4 == ':cocktail:' || $key4 == ':trophy:' || $key4 == ':fireworks:' || $key4 == ':gift:' || $key4 == ':astonished:' || $key4 == ':drooling_face:' || $key4 == ':sleeping:' || $key4 == ':yum:' || $key4 == ':laughing:' || $key4 == ':heart_eyes:' || $key4 == ':bulb:') && newData.hasChildren()",
                  "$key5": {
                    ".validate": "($key5.length == 28 || $key5.length == 12) && newData.isBoolean()"
                  }
                },
                ".validate": "newData.hasChildren()"
              },
              "source": {
                ".validate": "newData.isString() && (newData.val() == 'system' || newData.val() == 'user')"
              },
              "text": {
                ".validate": "newData.isString() && newData.val().length <= 4000"
              },
              "$other": {
                ".validate": "false"
              },
              ".write": "auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null"
            }
          },
          "created_at": {
            ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
          },
          "created_at_desc": {
            ".validate": "newData.isNumber() && newData.val() >= -(now + 3600000)"
          },
          "created_by": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "message_id": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "modified_at": {
            ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
          },
          "modified_by": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "reactions": {
            "$key4": {
              ".validate": "newData.hasChildren() && ($key4 == ':thumbsup:' || $key4 == ':thumbsdown:' || $key4 == ':grinning:' || $key4 == ':tada:' || $key4 == ':clap:' || $key4 == ':100:' || $key4 == ':poop:' || $key4 == ':confused:' || $key4 == ':heart:' || $key4 == ':smiley_cat:' || $key4 == ':smiling_imp:' || $key4 == ':muscle:' || $key4 == ':zzz:' || $key4 == ':cocktail:' || $key4 == ':trophy:' || $key4 == ':fireworks:' || $key4 == ':gift:' || $key4 == ':astonished:' || $key4 == ':drooling_face:' || $key4 == ':sleeping:' || $key4 == ':yum:' || $key4 == ':laughing:' || $key4 == ':heart_eyes:' || $key4 == ':bulb:') && newData.hasChildren() && ($key4 == ':thumbsup:' || $key4 == ':thumbsdown:' || $key4 == ':grinning:' || $key4 == ':tada:' || $key4 == ':clap:' || $key4 == ':100:' || $key4 == ':poop:' || $key4 == ':confused:' || $key4 == ':heart:' || $key4 == ':smiley_cat:' || $key4 == ':smiling_imp:' || $key4 == ':muscle:' || $key4 == ':zzz:' || $key4 == ':cocktail:' || $key4 == ':trophy:' || $key4 == ':fireworks:' || $key4 == ':gift:' || $key4 == ':astonished:' || $key4 == ':drooling_face:' || $key4 == ':sleeping:' || $key4 == ':yum:' || $key4 == ':laughing:' || $key4 == ':heart_eyes:' || $key4 == ':bulb:')",
              "$key5": {
                ".validate": "($key5.length == 28 || $key5.length == 12) && newData.isBoolean() && ($key5.length == 28 || $key5.length == 12) && newData.isBoolean()"
              }
            },
            ".validate": "newData.hasChildren()",
            ".write": "auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null"
          },
          "source": {
            ".validate": "newData.isString() && (newData.val() == 'system' || newData.val() == 'user')"
          },
          "text": {
            ".validate": "newData.isString() && newData.val().length <= 4000"
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "data.val() == null && auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null && !(root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'reader') || data.val() != null && newData.val() != null && auth != null && data.child('created_by').val() == auth.uid || data.val() != null && newData.val() == null && auth != null && (data.child('created_by').val() == auth.uid || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner'))"
        }
      }
    },
    "installs": {
      "$userId": {
        "$key6": {
          ".validate": "newData.isBoolean()"
        },
        ".validate": "newData.hasChildren()",
        ".write": "auth != null && auth.uid == $userId"
      }
    },
    "invites": {
      "$inviteId": {
        ".validate": "newData.hasChildren(['created_at', 'created_by', 'email', 'invited_at', 'invited_at_desc', 'inviter', 'link', 'role'])",
        "accepted_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "accepted_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "channel": {
          ".validate": "newData.hasChildren() && newData.hasChildren(['id', 'name'])",
          "id": {
            ".validate": "newData.isString() && newData.val().length == 12"
          },
          "name": {
            ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 50 && newData.val() == newData.val().toLowerCase()"
          },
          "$other": {
            ".validate": "false"
          }
        },
        "created_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "created_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().length <= 256"
        },
        "invited_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "invited_at_desc": {
          ".validate": "newData.isNumber() && newData.val() >= -(now + 3600000)"
        },
        "inviter": {
          ".validate": "newData.hasChildren(['email', 'id', 'title', 'username'])",
          "email": {
            ".validate": "newData.isString() && newData.val().length <= 256"
          },
          "id": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "title": {
            ".validate": "newData.isString() && newData.val().length <= 200"
          },
          "username": {
            ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 21 && newData.val() == newData.val().toLowerCase()"
          },
          "$other": {
            ".validate": "false"
          }
        },
        "link": {
          ".validate": "newData.isString() && newData.val().length <= 256"
        },
        "role": {
          ".validate": "newData.isString() && (newData.val() == 'owner' || newData.val() == 'editor' || newData.val() == 'reader')"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null && auth != null && (root.child('channels').child(newData.child('channel').child('id').val()).child('owned_by').val() == auth.uid || root.child('channel-members').child(newData.child('channel').child('id').val()).child(auth.uid).val() != null && root.child('channel-members').child(newData.child('channel').child('id').val()).child(auth.uid).child('role').val() == 'owner')"
      }
    },
    "member-channels": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        ".indexOn": [
          "index_priority_joined_at_desc"
        ]
      }
    },
    "tasks": {
      "create-user": {
        "$taskId": {
          ".validate": "newData.hasChildren(['created_at', 'created_by', 'request'])",
          "created_at": {
            ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
          },
          "created_by": {
            ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
          },
          "response": {
            ".validate": "newData.hasChildren()",
            "error": {
              ".validate": "newData.isString()"
            },
            "result": {
              ".validate": "true"
            },
            "$other": {
              ".validate": "false"
            }
          },
          "$other": {
            ".validate": "false"
          },
          "request": {
            ".validate": "newData.hasChildren(['user_id', 'username'])",
            "user_id": {
              ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
            },
            "username": {
              ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 21 && newData.val() == newData.val().toLowerCase()"
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".write": "data.val() == null && auth != null && newData.child('created_by').val() == auth.uid && (newData.child('request').child('user_id').val() == auth.uid || newData.child('user_id').val() == auth.uid) || data.val() != null && newData.val() == null && auth != null && data.child('created_by').val() == auth.uid",
          ".read": "auth != null && data.child('created_by').val() == auth.uid"
        }
      }
    },
    "typing": {
      "$channelId": {
        ".read": "auth != null && root.child('channel-members').child($channelId).child(auth.uid).val() != null",
        "$userId": {
          ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 21 && newData.val() == newData.val().toLowerCase()",
          ".write": "auth != null && auth.uid == $userId && root.child('channel-members').child($channelId).child(auth.uid).val() != null"
        }
      }
    },
    "unreads": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        "$channelId": {
          ".write": "data.val() != null && newData.val() == null && (auth != null && auth.uid == $userId || (root.child('channels').child($channelId).child('owned_by').val() == auth.uid || root.child('channel-members').child($channelId).child(auth.uid).val() != null && root.child('channel-members').child($channelId).child(auth.uid).child('role').val() == 'owner'))",
          "$messageId": {
            ".validate": "newData.isBoolean()",
            ".write": "data.val() != null && newData.val() == null && (auth != null && auth.uid == $userId)"
          }
        }
      }
    },
    "usernames": {
      "$username": {
        ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)",
        ".read": "auth != null"
      }
    },
    "users": {
      "$userId": {
        ".validate": "newData.hasChildren(['created_at', 'created_by', 'modified_at', 'username']) && (newData.parent().parent().child('usernames').child(newData.child('username').val()).val() == null || newData.parent().parent().child('usernames').child(newData.child('username').val()).val() == $userId)",
        "presence": {
          ".validate": "newData.isBoolean() || newData.isNumber()",
          ".write": "auth != null && auth.uid == $userId && data.parent().child('created_by').val() == auth.uid"
        },
        "created_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "created_by": {
          ".validate": "newData.isString() && (newData.val().length == 28 || newData.val().length == 12)"
        },
        "modified_at": {
          ".validate": "newData.isNumber() && newData.val() <= now + 3600000"
        },
        "username": {
          ".validate": "newData.isString() && newData.val().length > 2 && newData.val().length <= 21 && newData.val() == newData.val().toLowerCase()",
          ".write": "auth != null && auth.uid == $userId && data.parent().child('created_by').val() == auth.uid"
        },
        "developer": {
          ".validate": "newData.isBoolean()"
        },
        "profile": {
          ".validate": "newData.hasChildren()",
          "first_name": {
            ".validate": "newData.isString() && newData.val().length <= 50 && newData.isString() && newData.val().length <= 50"
          },
          "last_name": {
            ".validate": "newData.isString() && newData.val().length <= 50 && newData.isString() && newData.val().length <= 50"
          },
          "full_name": {
            ".validate": "newData.isString() && newData.val().length <= 50 && newData.isString() && newData.val().length <= 50"
          },
          "phone": {
            ".validate": "newData.isString() && newData.val().length <= 50 && newData.isString() && newData.val().length <= 50"
          },
          "photo": {
            ".validate": "newData.hasChildren() && newData.hasChildren(['filename', 'source']) && newData.hasChildren() && newData.hasChildren(['filename', 'source'])",
            "filename": {
              ".validate": "newData.isString() && newData.val().endsWith('.jpg') && newData.val().length <= 100 && newData.isString() && newData.val().endsWith('.jpg') && newData.val().length <= 100"
            },
            "height": {
              ".validate": "newData.isNumber() && newData.isNumber()"
            },
            "source": {
              ".validate": "newData.isString() && newData.val() == 'google-storage' && newData.isString() && newData.val() == 'google-storage'"
            },
            "taken_at": {
              ".validate": "newData.isNumber() && newData.val() <= now + 3600000 && newData.isNumber() && newData.val() <= now + 3600000"
            },
            "width": {
              ".validate": "newData.isNumber() && newData.isNumber()"
            },
            "uploading": {
              ".validate": "newData.isBoolean() && newData.isBoolean()"
            },
            "location": {
              "$key1": {
                ".validate": "newData.isNumber() && newData.isNumber()"
              },
              ".validate": "newData.hasChildren() && newData.child('lat').val() != null && newData.child('lng').val() != null && newData.hasChildren() && newData.child('lat').val() != null && newData.child('lng').val() != null"
            },
            "$other": {
              ".validate": "false"
            }
          },
          "$other": {
            ".validate": "false"
          },
          ".write": "auth != null && auth.uid == $userId && data.parent().child('created_by').val() == auth.uid"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null"
      },
      ".indexOn": [
        "email"
      ]
    }
  }
}
